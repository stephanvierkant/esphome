---
esphome:
  name: $devicename
  platform: ESP8266
  board: d1_mini

substitutions:
  devicename: lea

sensor:
  - platform: rotary_encoder
    id: lea_rotary
    name: "Rotary Encoder"
    pin_a:
      inverted: true
      mode:
        input: true
        pullup: true
      number: D3
    pin_b:
      inverted: false
      mode:
        input: true
        pullup: true
      number: D2
    on_clockwise:
      - if:
          condition:
            - light.is_on: lea_hoofdeinde
            - lambda: return id(lea_hoofdeinde).remote_values.get_brightness() > 0.2;
          then:
            - light.dim_relative:
                id: lea_hoofdeinde
                relative_brightness: 5%

      - if:
          condition:
            light.is_on: lea_voeteneind
          then:
            - light.dim_relative:
                id: lea_voeteneind
                relative_brightness: 5%

      - if:
          condition:
            light.is_on: lea_raam_rechts
          then:
            - light.dim_relative:
                id: lea_raam_rechts
                relative_brightness: 5%

    on_anticlockwise:
      - if:
          condition:
            light.is_on: lea_hoofdeinde
          then:
            - light.dim_relative:
                id: lea_hoofdeinde
                relative_brightness: -5%

      - if:
          condition:
            light.is_on: lea_voeteneind
          then:
            - light.dim_relative:
                id: lea_voeteneind
                relative_brightness: -5%

      - if:
          condition:
            light.is_on: lea_raam_rechts
          then:
            - light.dim_relative:
                id: lea_raam_rechts
                relative_brightness: -5%

binary_sensor:
  - platform: gpio
    id: lea_rotary_push
    pin:
      number: D1
      mode: INPUT_PULLUP
      inverted: true
    name: Knop 1
    on_click:
      - light.control:
          id: lea_hoofdeinde
          state: on
          effect: Regenboog
          brightness: 100%
      - light.control:
          id: lea_voeteneind
          state: on
          effect: Regenboog
          brightness: 100%
      - light.control:
          id: lea_raam_rechts
          state: on
          effect: Regenboog
          brightness: 100%

  - platform: gpio
    id: lea_bed_knopje
    pin:
      number: D7
      mode: INPUT_PULLUP
      inverted: true
    name: Knop 2
    on_click:
      then:
        - button.press: avondroutine

light:
  - platform: partition
    id: lea_hoofdeinde
    name: "Hoofdeinde"
    segments:
      - id: lea_neopixel
        from: 0
        to: 49
    effects: !include { file: light-effects.yaml }
  - platform: partition
    id: lea_voeteneind
    name: "Voeteneind"
    segments:
      - id: lea_neopixel
        from: 50
        to: 99
    effects: !include { file: light-effects.yaml }
  - platform: partition
    id: lea_raam_rechts
    name: "Raam rechts"
    segments:
      - id: lea_neopixel
        from: 100
        to: 134
    effects: !include { file: light-effects.yaml }

  - platform: neopixelbus
    id: lea_neopixel
    type: GRB
    internal: true
    variant: WS2812
    pin:
      number: D4
    num_leds: 135

button:
  - platform: template
    id: avondroutine
    name: Avondroutine
    on_press:
      - light.control:
          id: lea_hoofdeinde
          effect: none
          state: on
          brightness: 20%
          red: 100%
          green: 20%
          blue: 20%
      - light.turn_off: lea_raam_rechts
      - light.turn_off: lea_voeteneind

  - platform: template
    name: Ochtendroutine
    on_press:
      - light.turn_off: lea_hoofdeinde
      - light.turn_on:
          id: lea_raam_rechts
          brightness: 50%
          effect: Twinkle
      - lambda: |-
          auto call = id(lea_voeteneind).turn_on();
          call.set_brightness(0.25); // Helderheid op 20%
          call.set_effect("None");
          if (id(homeassistant_time).now().day_of_week == 1) {
            call.set_rgb(0.0, 1.0, 0.0); // Groen voor zondag
          } else if (id(homeassistant_time).now().day_of_week == 2) {
            call.set_rgb(1.0, 1.0, 0.0); // Geel voor maandag
          } else if (id(homeassistant_time).now().day_of_week == 3) {
            call.set_rgb(1.0, 0.0, 0.0); // Rood voor dinsdag
          } else if (id(homeassistant_time).now().day_of_week == 4) {
            call.set_rgb(1.0, 0.75, 0.8); // Roze voor woensdag
          } else if (id(homeassistant_time).now().day_of_week == 5) {
            call.set_rgb(0.5, 0.0, 0.5); // Paars voor donderdag
          } else if (id(homeassistant_time).now().day_of_week == 6) {
            call.set_rgb(0.0, 0.0, 1.0); // Blauw voor vrijdag
          } else if (id(homeassistant_time).now().day_of_week == 7) {
            call.set_rgb(0.0, 1.0, 0.0); // Groen voor zaterdag
          }
          call.perform();

<<: !include common.yaml
